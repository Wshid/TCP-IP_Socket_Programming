TCP Socket : Connect-Oriented -> Stream based socket

LINK    <->     IP      <->     TCP, UDP    <->     APPLICATION

TCP/IP의 탄생 배경
인터넷을 통한 효율적인 데이터의 송수신을 위해
    각 분야의 전문가 집합, 상호 논의로 여러가지 약속(프로토콜)을 만들어냄

개방형 시스템(Open System)
프로토콜 개층화의 장점 -> 표준화 작업을 통한 개방형 시스템
    여러개의 표준을 근거로 설계된 시스템을 개방형 시스템이라 함
    A장비를 같은기능을 하는 B장비(타회사 제품)을 사용해도 무리가 없음
        -> 제조사들이 각 계층별 표준에 맞춰 라우터를 제작하기 때문
소프트웨어 공학에서의 Object Oriented 탄생 배경과 유사


LINK Layer : LAN, WAN, MAN과 같은 네트워크 표준과 같련된 프로토콜 정의
IP Layer : Connetionless, 신뢰할 수 없는 프로토콜
            데이터 전송시의 경로가 무작위적이며, 전송 중 데이터의 손실, 오류 발생시에도 해결하려 하지 않음
TCP/UDP Layer : 경로정보를 바탕으로 데이터의 실제 송수신 진행
    IP는 하나의 데이터 패킷이 전송되는 과정에만 중심두고 설계됨
    TCP는 패킷의 순서 및 오류 까지 총괄하여 관리(SYN/ACK)
    하위 계층에서 Connectionless라 하더라도 상위계층에서 Connect-Oriented로 송/수신을 잡아줌
IP 상위계층에서 호스트 대 호스트의 데이터 송수신 방식을 약속하는 것
Application Layer : 클라이언트와 서버간의 데이터 송수신에 대한 약속
                        네트워크 프로그래밍은 app. 프로토콜의 설계 및 구현이 지배적
